AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'TeamQuiz IaC using AWS SAM

  '
Parameters:
  DomainName:
    Type: String
    Default: team-quiz
    Description: The domain name for the Cognito User Pool.
Resources:
  teamQuizUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: team-quiz_pool
      MfaConfiguration: 'OFF'
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      UsernameAttributes:
      - email
      AutoVerifiedAttributes:
      - email
      Schema:
      - AttributeDataType: String
        Name: email
        Required: true
      - AttributeDataType: String
        Name: given_name
        Mutable: true
        Required: true
      - AttributeDataType: String
        Name: family_name
        Mutable: true
        Required: true
      EmailConfiguration:
        EmailSendingAccount: COGNITO_DEFAULT
      EmailVerificationSubject: Please verify your email address
      EmailVerificationMessage: Your verification code is {####}. Please enter this
        code to verify your email address.
  teamQuizUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: teamQuiz_client
      UserPoolId:
        Ref: teamQuizUserPool
      GenerateSecret: false
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
      - code
      AllowedOAuthScopes:
      - email
      - openid
      - profile
      - aws.cognito.signin.user.admin
      CallbackURLs:
      - http://localhost
      ExplicitAuthFlows:
      - ALLOW_CUSTOM_AUTH
      - ALLOW_ADMIN_USER_PASSWORD_AUTH
      - ALLOW_USER_PASSWORD_AUTH
      - ALLOW_USER_SRP_AUTH
      - ALLOW_REFRESH_TOKEN_AUTH
      SupportedIdentityProviders:
      - COGNITO
      RefreshTokenValidity: 30
      AccessTokenValidity: 1
      IdTokenValidity: 1
  userPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      UserPoolId:
        Ref: teamQuizUserPool
      Domain:
        Ref: DomainName
  userPoolUICustomization:
    Type: AWS::Cognito::UserPoolUICustomizationAttachment
    DependsOn: userPoolDomain
    Properties:
      UserPoolId:
        Ref: teamQuizUserPool
      ClientId: ALL
  teamQuizApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors: '''*'''
      Auth:
        DefaultAuthorizer: MyCognitoAuthorizer
        Authorizers:
          MyCognitoAuthorizer:
            UserPoolArn:
              Fn::GetAtt:
              - teamQuizUserPool
              - Arn
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: HelloWorldFunction
      Handler: app.lambda_handler
      Runtime: python3.10
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: get
            RestApiId:
              Ref: teamQuizApi
    Metadata:
      SamResourceId: HelloWorldFunction
Outputs:
  ApiUrl:
    Description: URL of the API Gateway
    Value:
      Fn::Sub: https://${teamQuizApi}.execute-api.${AWS::Region}.amazonaws.com/Prod
  UserPoolId:
    Description: ID of the Cognito User Pool
    Value:
      Ref: teamQuizUserPool
  UserPoolClientId:
    Description: ID of the Cognito User Pool Client
    Value:
      Ref: teamQuizUserPoolClient
  UserPoolDomain:
    Description: Domain name for the Cognito User Pool
    Value:
      Fn::Sub: https://${DomainName}.auth.${AWS::Region}.amazoncognito.com
  UserPoolHostUI:
    Description: URL for Cognito User Pool Hosted UI
    Value:
      Fn::Sub: https://${DomainName}.auth.${AWS::Region}.amazoncognito.com/oauth2/authorize?response_type=code&client_id=${teamQuizUserPoolClient}&redirect_uri=http://localhost
